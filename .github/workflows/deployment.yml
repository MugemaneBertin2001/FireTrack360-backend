name: Deploy FireTrack360 to DigitalOcean
on:
  push:
    branches: ['main']

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      MYSQL_ROOT_PASSWORD: Mine!123
      MYSQL_DATABASE: fireTrack360_db
      MYSQL_USER: firetrack
      MYSQL_PASSWORD: Mine!123
      DB_HOST: mysql
      DB_PORT: 3306
      DB_USERNAME: firetrack
      DB_PASSWORD: Mine!123
      DB_NAME: fireTrack360_db

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/firetrack360-backend:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new

      - name: Create env file
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_SSH_PRIVATE_KEY }}
          script: |
            mkdir -p /root/firetrack360
            cat > /root/firetrack360/env.production << 'EOL'
            MYSQL_ROOT_PASSWORD=Mine!123
            MYSQL_DATABASE=fireTrack360_db
            MYSQL_USER=firetrack
            MYSQL_PASSWORD=Mine!123
            DB_HOST=mysql
            DB_PORT=3306
            DB_USERNAME=firetrack
            DB_PASSWORD=Mine!123
            DB_NAME=fireTrack360_db
            NODE_ENV=production
            SALT_ROUNDS=19
            EMAIL_API_URL=http://167.99.222.32:8080/api/mail/send
            JWT_SECRET=prod_Y29nUnlOYnNNbG43QzM0Y0FqM1FPX9VXw44uQfYhT8S95jXkks7tZFEYpXlHVc2KQK8NdYXiZDLzP4pR2xFQ==
            JWT_EXPIRES_IN=24h
            DOCKERHUB_USERNAME=bertinm2001
            EOL

      - name: Copy Docker Compose file
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_SSH_PRIVATE_KEY }}
          source: 'docker-compose.yml'
          target: '/root/firetrack360'

      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_SSH_PRIVATE_KEY }}
          script: |
            cd /root/firetrack360
            cp env.production .env
            docker compose pull
            docker compose down
            docker compose up -d

            # Wait for services to be healthy
            echo "Waiting for services to be healthy..."
            sleep 30

      - name: Verify Deployment
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DO_HOST }}
          username: ${{ secrets.DO_USER }}
          key: ${{ secrets.DO_SSH_PRIVATE_KEY }}
          script: |
            cd /root/firetrack360

            # Check backend container
            BACKEND_STATUS=$(docker compose ps backend --format json | grep -o '"State":"[^"]*"' | cut -d'"' -f4)
            if [ "$BACKEND_STATUS" != "running" ]; then
              echo "Backend container is not running"
              docker compose logs backend
              exit 1
            fi

            # Health check
            HEALTH_CHECK=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:3000/health || echo "000")
            if [ "$HEALTH_CHECK" != "200" ]; then
              echo "Health check failed. HTTP status: $HEALTH_CHECK"
              docker compose logs
              exit 1
            fi

            echo "Deployment successful!"
